{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","App","renderContent","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","error","this","React","Component","ReactDOM","render","document","querySelector"],"mappings":"sMAGMA,G,MAAe,CACnBC,OAAQ,CACNC,KAAM,qBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,0BACNC,SAAU,eAwBCE,EAZO,SAAAC,GACpB,IATiBC,EAAKC,EAShBC,GATWF,EASQD,EAAMC,KATTC,GASc,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAID,EAEFP,EAAaS,GAAhCP,EAFqB,EAErBA,KAAMC,EAFe,EAEfA,SACd,OACE,yBAAKS,UAAS,yBAAoBH,IAChC,uBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,4BAAKD,GACL,uBAAGU,UAAS,6BAAwBT,EAAxB,aC3BZU,EAAU,SAAAP,GACd,OACE,yBAAKM,UAAU,oBACb,yBAAKA,UAAU,sBAAsBN,EAAMQ,WAKjDD,EAAQE,aAAe,CACrBD,QAAS,cAGID,QCTTG,E,YACJ,WAAYV,GAAQ,IAAD,8BACjB,4CAAMA,KAcRW,cAAgB,WACd,OAAI,EAAKC,MAAMC,eAAiB,EAAKD,MAAMX,IAClC,uCAAa,EAAKW,MAAMC,eAG5B,EAAKD,MAAMC,cAAgB,EAAKD,MAAMX,IAClC,kBAAC,EAAD,CAAeA,IAAK,EAAKW,MAAMX,MAItC,6BACE,kBAAC,EAAD,CAASO,QAAQ,qCAvBrB,EAAKI,MAAQ,CAAEX,IAAK,KAAMY,aAAc,IAHvB,E,iFAME,IAAD,OAElBC,OAAOC,UAAUC,YAAYC,oBAE3B,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAElB,IAAKiB,EAASE,OAAOC,cACjD,SAAAC,GAAK,OAAI,EAAKH,SAAS,CAAEN,aAAcS,EAAMd,e,+BAuB/C,OAAO,6BAAMe,KAAKZ,qB,GAnCJa,IAAMC,WAsCxBC,IAASC,OAAO,kBAAC,EAAD,MAAaC,SAASC,cAAc,W","file":"static/js/main.ccfc9b85.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SeasonDisplay.css\";\r\n\r\nconst seasonConfig = {\r\n  summer: {\r\n    text: \"Lets hit the Beach\",\r\n    iconName: \"sun\"\r\n  },\r\n  winter: {\r\n    text: \"Have some hot chocolate\",\r\n    iconName: \"snowflake\"\r\n  }\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && month < 9) {\r\n    return lat > 0 ? \"summer\" : \"winter\";\r\n  } else {\r\n    return lat > 0 ? \"winter\" : \"summer\";\r\n  }\r\n};\r\n\r\nconst SeasonDisplay = props => {\r\n  const season = getSeason(props.lat, new Date().getMonth());\r\n  const { text, iconName } = seasonConfig[season];\r\n  return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={`icon-left massive ${iconName} icon`}></i>\r\n      <h1>{text}</h1>\r\n      <i className={`icon-right massive ${iconName} icon`}></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from \"react\";\r\n\r\nconst Spinner = props => {\r\n  return (\r\n    <div className=\"ui active dimmer\">\r\n      <div className=\"ui big text loader\">{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  message: \"Loading...\"\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SeasonDisplay from \"./SeasonDisplay\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { lat: null, errorMessage: \"\" };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // To get the user location\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      //to update state we call setState\r\n      position => this.setState({ lat: position.coords.latitude }),\r\n      error => this.setState({ errorMessage: error.message })\r\n    );\r\n  }\r\n\r\n  renderContent = () => {\r\n    if (this.state.errorMessage && !this.state.lat) {\r\n      return <div>Error: {this.state.errorMessage}</div>;\r\n    }\r\n\r\n    if (!this.state.errorMessage && this.state.lat) {\r\n      return <SeasonDisplay lat={this.state.lat} />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Spinner message=\"Please accept location request\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // React requires a render method\r\n  //conditional rendering\r\n  render() {\r\n    return <div>{this.renderContent()}</div>;\r\n  }\r\n}\r\nReactDOM.render(<App></App>, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}